<?php

namespace Xanweb\PhpCsFixer;

use Concrete\Core\Support\CodingStyle\PhpFixerRuleResolver as CorePhpFixerRuleResolver;

class PhpFixerRuleResolver extends CorePhpFixerRuleResolver
{
    /**
    * Get the rules associated to specific flags.
    *
    * @param int $flags A combination of PhpFixer::FLAG_... flags.
    * @param bool $onlyAvailableOnes return only the available rules
    * @param string $minimumPhpVersion the minimum PHP version that the files to be checked/fixed must be compatible with
    *
    * @return array
    */
    public function getRules($flags, $onlyAvailableOnes, $minimumPhpVersion = '')
    {
        return [
            'align_multiline_comment' => ['comment_type'=>'phpdocs_like'],
            'array_indentation' => true,
            'array_syntax' => ['syntax'=>'short'],
            'binary_operator_spaces' => ['align_double_arrow'=>false,'align_equals'=>false],
            'blank_line_after_namespace' => true,
            'blank_line_after_opening_tag' => true,
            'blank_line_before_statement' => ['statements'=>['declare','exit','return','throw','try','yield']],
            'braces' => true,
            'cast_spaces' => true,
            'class_attributes_separation' => ['elements'=>['method']],
            'class_definition' => ['single_line'=>true],
            'combine_consecutive_issets' => true,
            'combine_consecutive_unsets' => true,
            'combine_nested_dirname' => true,
            'compact_nullable_typehint' => true,
            'concat_space' => ['spacing'=>'one'],
            'declare_equal_normalize' => ['space'=>'single'],
            'dir_constant' => true,
            'elseif' => true,
            'encoding' => true,
            'ereg_to_preg' => true,
            'full_opening_tag' => true,
            'function_declaration' => true,
            'function_to_constant' => true,
            'function_typehint_space' => true,
            'hash_to_slash_comment' => true,
            'implode_call' => true,
            'include' => true,
            'indentation_type' => true,
            'is_null' => ['use_yoda_style'=>false],
            'line_ending' => true,
            'linebreak_after_opening_tag' => true,
            'lowercase_cast' => true,
            'lowercase_constants' => true,
            'lowercase_keywords' => true,
            'lowercase_static_reference' => true,
            'magic_constant_casing' => true,
            'magic_method_casing' => true,
            'method_argument_space' => true,
            'modernize_types_casting' => true,
            'native_function_casing' => true,
            'new_with_braces' => true,
            'no_alias_functions' => true,
            'no_blank_lines_after_class_opening' => true,
            'no_blank_lines_after_phpdoc' => true,
            'no_break_comment' => true,
            'no_closing_tag' => true,
            'no_empty_comment' => true,
            'no_empty_phpdoc' => true,
            'no_empty_statement' => true,
            'no_extra_blank_lines' => ['tokens'=>['curly_brace_block','extra','parenthesis_brace_block','square_brace_block','throw','use']],
            'no_homoglyph_names' => true,
            'no_leading_import_slash' => true,
            'no_leading_namespace_whitespace' => true,
            'no_mixed_echo_print' => ['use'=>'echo'],
            'no_multiline_whitespace_around_double_arrow' => true,
            'no_php4_constructor' => true,
            'no_short_bool_cast' => true,
            'no_singleline_whitespace_before_semicolons' => true,
            'no_spaces_after_function_name' => true,
            'no_spaces_around_offset' => true,
            'no_spaces_inside_parenthesis' => true,
            'no_superfluous_elseif' => true,
            'no_trailing_comma_in_list_call' => true,
            'no_trailing_comma_in_singleline_array' => true,
            'no_trailing_whitespace' => true,
            'no_trailing_whitespace_in_comment' => true,
            'no_unneeded_control_parentheses' => true,
            'no_unneeded_curly_braces' => true,
            'no_unneeded_final_method' => true,
            'no_unused_imports' => true,
            'no_useless_else' => true,
            'no_useless_return' => true,
            'no_whitespace_before_comma_in_array' => true,
            'no_whitespace_in_blank_line' => true,
            'non_printable_character' => true,
            'normalize_index_brace' => true,
            'object_operator_without_whitespace' => true,
            'ordered_class_elements' => true,
            'ordered_imports' => true,
            'phpdoc_add_missing_param_annotation' => ['only_untyped'=>false],
            'phpdoc_align' => ['align'=>'left'],
            'phpdoc_annotation_without_dot' => true,
            'phpdoc_indent' => true,
            'phpdoc_inline_tag' => true,
            'phpdoc_no_access' => true,
            'phpdoc_no_alias_tag' => true,
            'phpdoc_no_empty_return' => true,
            'phpdoc_no_package' => true,
            'phpdoc_no_useless_inheritdoc' => true,
            'phpdoc_order' => true,
            'phpdoc_return_self_reference' => true,
            'phpdoc_scalar' => true,
            'phpdoc_separation' => true,
            'phpdoc_single_line_var_spacing' => true,
            'phpdoc_summary' => true,
            'phpdoc_trim' => true,
            'phpdoc_trim_consecutive_blank_line_separation' => true,
            'phpdoc_types' => true,
            'phpdoc_var_without_name' => true,
            'random_api_migration' => true,
            'return_type_declaration' => true,
            'self_accessor' => true,
            'set_type_to_cast' => true,
            'short_scalar_cast' => true,
            'simplified_null_return' => true,
            'single_blank_line_at_eof' => true,
            'single_blank_line_before_namespace' => true,
            'single_class_element_per_statement' => true,
            'single_import_per_statement' => true,
            'single_line_after_imports' => true,
            'single_quote' => true,
            'space_after_semicolon' => true,
            'standardize_not_equals' => true,
            'switch_case_semicolon_to_colon' => true,
            'switch_case_space' => true,
            'ternary_operator_spaces' => true,
            'ternary_to_null_coalescing' => true,
            'trailing_comma_in_multiline_array' => true,
            'trim_array_spaces' => true,
            'unary_operator_spaces' => true,
            'visibility_required' => true,
            'whitespace_after_comma_in_array' => true,
        ];
    }
}
